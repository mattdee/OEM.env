   #===============================================================================================================
   #                                                                                                                                              
   #         FILE: OEM.env
   #
   #        USAGE: source the file
   #
   #  DESCRIPTION: set the OEM environment and shortcuts to useful features
   #      OPTIONS:  
   # REQUIREMENTS: 
   #       AUTHOR: Matt D mattdee@gmail.com
   #      CREATED: 01.15.2015
   #      VERSION: 1.0
   #      EUL    : 	THIS CODE IS OFFERED ON AN “AS-IS” BASIS AND NO WARRANTY, EITHER EXPRESSED OR IMPLIED, IS GIVEN. 
   #				THE AUTHOR EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND, WHETHER EXPRESS OR IMPLIED.
   #				YOU ASSUME ALL RISK ASSOCIATED WITH THE QUALITY, PERFORMANCE, INSTALLATION AND USE OF THE SOFTWARE INCLUDING, 
   #				BUT NOT LIMITED TO, THE RISKS OF PROGRAM ERRORS, DAMAGE TO EQUIPMENT, LOSS OF DATA OR SOFTWARE PROGRAMS, 
   #				OR UNAVAILABILITY OR INTERRUPTION OF OPERATIONS. 
   #				YOU ARE SOLELY RESPONSIBLE FOR DETERMINING THE APPROPRIATENESS OF USE THE SOFTWARE AND ASSUME ALL RISKS ASSOCIATED WITH ITS USE.
   #
   #
   #
   #
   #
   #
   #===============================================================================================================


unset OEM_HOME


function find_oem_home()
{
	#find the Oracle Inventory location
	export OS=`uname`
	case $OS in
	    Linux)
	    #echo "Linux"
	     ORA_INV=`cat /etc/oraInst.loc | grep invent | cut -d= -f2`
	     ORA_INV_XML=$ORA_INV/ContentsXML/inventory.xml
	     OEM_HOME=`cat $ORA_INV_XML | grep oms12c1 | cut -d= -f3  | awk '{print $1}' | sed 's/"//g'`
	    export PATH=$OEM_HOME/bin:$PATH ORA_INV ORA_INV_XML OEM_HOME
	    ;;
	    SunOS)
	    #echo "Solaris"
	     ORA_INV=`cat /var/opt/oracle/oraInst.loc | grep invent | cut -d= -f2`
	     ORA_INV_XML=$ORA_INV/ContentsXML/inventory.xml
	   	 OEM_HOME=`cat $ORA_INV_XML | grep oms12c1 | cut -d= -f3  | awk '{print $1}' | sed 's/"//g'`
	    export PATH=$OEM_HOME/bin:$PATH ORA_INV ORA_INV_XML OEM_HOME
	    ;;
	esac
}


function test_oem_home()
{
 if test "${OEM_HOME+set}" != set 
   then
        echo "OEM_HOME is not set"
		echo "Exiting"
		exit 1    
    else
        find_oem_home
    fi

   export PATH=$PATH:$OEM_HOME/bin
   # Test to make sure emcli is in the path
   if [ -z `which emcli` ]
         then echo "emcli is not in path."
            echo "Exiting!"
            exit 1
      else  echo "good to go "
   fi

}

function omslogin()
{
	find_oem_home
	test_oem_home
	echo "Please enter the sysman password to login:"
	unset SYSMANPWD;
		while IFS= read -r -s -n1 pass; do
		  if [[ -z $pass ]]; then
		     echo
		     break
		  else
		     echo -n '*'
		     SYSMANPWD+=$pass
		  fi
		done
	emcli login -username=sysman -password=${SYSMANPWD}
}


function omslogout()
{
	find_oem_home
	test_oem_home
	emcli logout	
}


function status()
{
	find_oem_home
	test_oem_home
	omslogout
	omslogin
	emctl status oms -details -sysman_pwd ${SYSMANPWD}
}


function target_status()
{
	find_oem_home
	test_oem_home	
	omslogout	
	omslogin	
	emcli get_targets
}



function stopoms()
{
	find_oem_home
	test_oem_home	
	omslogout	
	omslogin
	emctl stop oms -all -force
}



function startoms()
{
	find_oem_home
	test_oem_home	
	omslogout	
	omslogin
	emctl start oms
}



function add_admin()
{
	find_oem_home
	test_oem_home	
	omslogout	
	omslogin

		echo "What is the username you wish to add? >"
		echo "This will serve as the password"
		read EMUser
			$OEM_HOME/bin/emcli create_user -name=${EMUser} -password=${EMUser} -roles=EM_ALL_ADMINISTRATOR
}



function help()
{
clear
echo "The following commands are available"
echo ----------------------------------------------------------
echo "omslogin"
echo "This will log on to OMS"
echo ----------------------------------------------------------
echo "omslogout"
echo "This will log out of OMS"
echo ----------------------------------------------------------
echo "status"
echo "This will show the detailed status of OMS"
echo ----------------------------------------------------------
echo "target_status"
echo "This will show the status of discovered targets"
echo ----------------------------------------------------------
echo "stopoms"
echo "This is force stop the entire OMS stack"
echo ----------------------------------------------------------
echo "startoms"
echo "This will start the OMS stack"
echo ----------------------------------------------------------
echo "add_admin"
echo "This will add an EM Administrator"
echo ----------------------------------------------------------
echo "help"
echo "This screen"
echo ----------------------------------------------------------


}

help